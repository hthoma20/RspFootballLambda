@startuml
hide empty description

[*] --> COIN_TOSS
COIN_TOSS --> KICKOFF_ELECTION: RSP

state PLAY_CALL

state KickoffGroup as "Kickoff" {

KICKOFF_ELECTION --> KICKOFF_CHOICE: KICK,\nRECEIVE
KICKOFF_CHOICE --> KICKOFF: REGULAR
KICKOFF_CHOICE --> ONSIDE_KICK: ONSIDE

KICKOFF --> PLAY_CALL: ROLL\n1-8 **or**\n15-18
KICKOFF --> KICK_RETURN:ROLL\n9-12
KICKOFF --> TOUCHBACK_CHOICE: ROLL\n13-14

ONSIDE_KICK --> PLAY_CALL: ROLL
}

state KickReturnGroup as "Kick Return" {
TOUCHBACK_CHOICE --> PLAY_CALL: TOUCHBACK
TOUCHBACK_CHOICE --> KICK_RETURN: RETURN

KICK_RETURN --> PLAY_CALL: ROLL\n2-5
KICK_RETURN --> KICK_RETURN_1: ROLL\n1
KICK_RETURN --> KICK_RETURN_6: ROLL\n6
KICK_RETURN_6 --> PAT_CHOICE : ROLL\n6
KICK_RETURN_6 --> PLAY_CALL: ROLL\n1-5
KICK_RETURN_1 --> FUMBLE: ROLL\n1
KICK_RETURN_1 --> PLAY_CALL: HOLD,\nROLL\n2-6
FUMBLE --> PLAY_CALL: RSP
}

state TouchdownGroup as "Touchdown" {
state TOUCHDOWN_END <<choice>>

PAT_CHOICE --> EXTRA_POINT: ONE_POINT
PAT_CHOICE --> EXTRA_POINT_2: TWO_POINT
EXTRA_POINT --> TOUCHDOWN_END: ROLL
EXTRA_POINT_2 --> TOUCHDOWN_END: RSP

TOUCHDOWN_END --> GAME_OVER: //game//\n//over//
TOUCHDOWN_END --> KICKOFF_CHOICE: //game **not**//\n//over//
}

state END_PLAY <<choice>>
state END_SHORT_RUN <<choice>>
state END_SHORT_PASS <<choice>>

state ShortRunGroup as "Short Run" {
PLAY_CALL --> SHORT_RUN: SHORT_RUN
SHORT_RUN --> SACK_ROLL: RSP\nLOSS
SHORT_RUN --> SHORT_RUN_CONT: RSP\nWIN
SHORT_RUN --> END_PLAY: RSP\nTIE
SHORT_RUN_CONT --> END_SHORT_RUN: RSP\nWIN
SHORT_RUN_CONT --> END_PLAY: RSP\nTIE **or**\nLOSS
END_SHORT_RUN --> PAT_CHOICE : //TD//
END_SHORT_RUN --> SHORT_RUN_CONT: //**no**//\n//TD//
}

state LongRunGroup as "Long Run" {
PLAY_CALL --> LONG_RUN: LONG_RUN
LONG_RUN --> SACK_ROLL: RSP\nLOSS
LONG_RUN --> LONG_RUN_ROLL: RSP\nWIN
LONG_RUN --> END_PLAY: RSP\nTIE
LONG_RUN_ROLL --> END_PLAY: ROLL
}

state ShortPassGroup as "Short Pass" {
PLAY_CALL --> SHORT_PASS : SHORT_PASS
SHORT_PASS --> SACK_CHOICE : RSP\nLOSS
SHORT_PASS --> SHORT_PASS_CONT: RSP\nWIN
SHORT_PASS --> END_PLAY: RSP\nTIE
SHORT_PASS_CONT --> END_SHORT_PASS : RSP\nWIN
SHORT_PASS_CONT --> END_PLAY: RSP\nTIE **or**\nLOSS
END_SHORT_PASS --> PAT_CHOICE : //TD//
END_SHORT_PASS --> SHORT_PASS_CONT: //**no**//\n//TD//
}

state LongPassGroup as "Long Pass" {
PLAY_CALL --> LONG_PASS: LONG_PASS
LONG_PASS --> SACK_CHOICE : RSP\nLOSS
LONG_PASS --> LONG_PASS_ROLL : RSP\nWIN
LONG_PASS --> END_PLAY: RSP\nTIE
LONG_PASS_ROLL --> END_PLAY: ROLL
}

state BombGroup as "Bomb" {
state BOMB_CHECK <<choice>>

PLAY_CALL --> BOMB: BOMB
BOMB --> SACK_CHOICE : RSP\nLOSS
BOMB --> BOMB_ROLL: RSP\nWIN
BOMB --> END_PLAY: RSP\nTIE
BOMB_ROLL --> BOMB_CHECK: ROLL
BOMB_CHECK --> BOMB_CHOICE: //roll 1,2//\n//**and** odd//
BOMB_CHECK --> BOMB_ROLL: //roll 1,2//\n//**and** even//
BOMB_CHECK --> END_PLAY: //roll 3//
BOMB_CHOICE --> END_PLAY: HOLD
BOMB_CHOICE --> BOMB_ROLL: ROLL
}

state FieldGoalGroup as "Field Goal" {
PLAY_CALL --> FIELD_GOAL: FIELD_GOAL
FIELD_GOAL --> FAKE_FG_CHOICE: RSP\nWIN
FIELD_GOAL --> FIELD_GOAL_KICK: RSP\nTIE
FIELD_GOAL --> FIELD_GOAL_BLOCK: RSP\nLOSS
FAKE_FG_CHOICE --> END_PLAY: FAKE
FAKE_FG_CHOICE --> FIELD_GOAL_KICK: KICK
FIELD_GOAL_KICK --> KICKOFF_CHOICE: //4-12//
FIELD_GOAL_KICK --> END_PLAY: //1-3//
FIELD_GOAL_BLOCK --> END_PLAY: ROLL\n1
FIELD_GOAL_BLOCK --> FIELD_GOAL_KICK: ROLL\n2-6
}

state PuntGroup as "Punt" {
PLAY_CALL --> PUNT: PUNT
PUNT --> FAKE_PUNT_CHOICE : RSP\nWIN
PUNT --> PUNT_KICK: RSP\nTIE
PUNT --> PUNT_BLOCK: RSP\nLOSS
FAKE_PUNT_CHOICE --> END_PLAY: FAKE
FAKE_PUNT_CHOICE --> PUNT_KICK: KICK
PUNT_KICK --> TOUCHBACK_CHOICE: //endzone//
PUNT_KICK --> KICK_RETURN: //in//\n//bounds//
PUNT_KICK --> END_PLAY: //coffin_corner//
PUNT_KICK --> END_PLAY: //1-3//
PUNT_BLOCK --> END_PLAY: ROLL\n1
PUNT_BLOCK --> PUNT_KICK: ROLL\n2-6

note right of PUNT_KICK
Note that a PUNT is considered a
play, whereas a KICKOFF is not.
This may cause confusing when ending either
with a KICK_RETURN
end note
}

state PenaltyGroup as "Penalty" {
state PENALTY_CHECK <<choice>>

PLAY_CALL --> PENALTY: PENALTY
PENALTY --> PENALTY_CHECK: RSP
PENALTY_CHECK --> KICKOFF: //safety//
PENALTY_CHECK --> PAT_CHOICE: //TD//
}

SACK_ROLL --> END_PLAY: ROLL

state PICK_OUT_OF_BOUNDS_CHECK <<choice>>

SACK_CHOICE --> END_PLAY: SACK
SACK_CHOICE --> PICK_ROLL: PICK
PICK_ROLL --> END_PLAY: ROLL\n//**no** pick//
PICK_ROLL --> DISTANCE_ROLL: ROLL\n//pick//
DISTANCE_ROLL --> PICK_OUT_OF_BOUNDS_CHECK: ROLL
PICK_OUT_OF_BOUNDS_CHECK --> END_PLAY: //OOB//
PICK_OUT_OF_BOUNDS_CHECK --> PICK_RETURN: //in//\n//bounds//
PICK_OUT_OF_BOUNDS_CHECK  --> PICK_TOUCHBACK_CHOICE: //in//\n//endzone//

PICK_TOUCHBACK_CHOICE --> END_PLAY: TOUCHBACK
PICK_TOUCHBACK_CHOICE --> PICK_RETURN: RETURN
PICK_RETURN --> END_PLAY: ROLL\n1-5
PICK_RETURN --> PICK_RETURN_6: ROLL\n6
PICK_RETURN_6 --> END_PLAY: ROLL\n2-5
PICK_RETURN_6 --> PAT_CHOICE: ROLL\n6

END_PLAY --> PAT_CHOICE: //TD//
END_PLAY --> KICKOFF_CHOICE: //halftime,//\n//safety//
END_PLAY --> GAME_OVER: //game//\n//over//
END_PLAY --> PLAY_CALL: //next down,//\n//turnover//
@enduml